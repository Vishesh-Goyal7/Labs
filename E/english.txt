#include <stdio.h>
#include <stdbool.h>
#define MAX_PROCESSES 10
#define MAX_RESOURCES 10
bool isSafe(int processes[], int n, int max[][MAX_RESOURCES], int allot[][MAX_RESOURCES], int available[]) {
    int finish[MAX_PROCESSES] = {0};
    int safeSeq[MAX_PROCESSES];
    int work[MAX_RESOURCES];
    int count = 0;
    for (int i = 0; i < MAX_RESOURCES; i++) {
        work[i] = available[i];
    }
    while (count < n) {
        bool found = false;
        for (int p = 0; p < n; p++) {
            if (!finish[p]) {
                bool canAllocate = true;
                for (int j = 0; j < MAX_RESOURCES; j++) {
                    if (max[p][j] - allot[p][j] > work[j]) {
                        canAllocate = false;
                        break;
                    }
                }
                if (canAllocate) {
                    for (int j = 0; j < MAX_RESOURCES; j++) {
                        work[j] += allot[p][j];
                    }
                    safeSeq[count++] = p;
                    finish[p] = 1;
                    found = true;
                }
            }
        }
        if (!found) {
            printf("System is not in a safe state.\n");
            return false;
        }
    }
    printf("System is in a safe state.\nSafe sequence is: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", safeSeq[i]);
    }
    printf("\n");
    return true;
}
int main() {
    int processes[MAX_PROCESSES];
    int n, m;
    int max[MAX_PROCESSES][MAX_RESOURCES];
    int allot[MAX_PROCESSES][MAX_RESOURCES];
    int available[MAX_RESOURCES];
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    printf("Enter the number of resources: ");
    scanf("%d", &m);
    printf("Enter the maximum resources for each process:\n");
    for (int i = 0; i < n; i++) {
        processes[i] = i;
        for (int j = 0; j < m; j++) {
            printf("Max resources for Process P%d: ", i);
            scanf("%d", &max[i][j]);
        }
    }
    printf("Enter the allocated resources for each process:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("Allocated resources for Process P%d: ", i);
            scanf("%d", &allot[i][j]);
        }
    }
    printf("Enter the available resources:\n");
    for (int j = 0; j < m; j++) {
        printf("Available resources for Resource R%d: ", j);
        scanf("%d", &available[j]);
    }
    isSafe(processes, n, max, allot, available);
    return 0;
}
