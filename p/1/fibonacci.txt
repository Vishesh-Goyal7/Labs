#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>


long long factorial(int n) {
   long long fact = 1;
   for (int i = 1; i <= n; i++) {
       fact *= i;
   }
   return fact;
}


long long fibonacci(int n) {
   if (n == 0) return 0;
   if (n == 1) return 1;
  
   long long a = 0, b = 1, temp;
   for (int i = 2; i <= n; i++) {
       temp = a + b;
       a = b;
       b = temp;
   }
   return b;
}


int main(int argc, char* argv[]) {
   int rank, size;


   MPI_Init(&argc, &argv);
   MPI_Comm_rank(MPI_COMM_WORLD, &rank);
   MPI_Comm_size(MPI_COMM_WORLD, &size);


   if (rank % 2 == 0) {  // Even rank → Factorial
       printf("Rank %d: Factorial(%d) = %lld\n", rank, rank, factorial(rank));
   } else {  // Odd rank → Fibonacci
       printf("Rank %d: Fibonacci(%d) = %lld\n", rank, rank, fibonacci(rank));
   }


   MPI_Finalize();
   return 0;
}
