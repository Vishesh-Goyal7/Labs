#include <stdio.h>
#include <cuda_runtime.h>

#define N 6

__device__ void selectionSort(int *arr, int n) {
    for (int i = 0; i < n - 1; i++) {
        int min_idx = i;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[min_idx]) {
                min_idx = j;
            }
        }
        // Swap arr[i] and arr[min_idx]
        int temp = arr[i];
        arr[i] = arr[min_idx];
        arr[min_idx] = temp;
    }
}

__global__ void sortArray(int *arr, int n) {
    selectionSort(arr, n);
}

int main() {
    int arr[N] = {9, 3, 5, 1, 6, 8};
    int *d_arr;

    cudaMalloc(&d_arr, N * sizeof(int));
    cudaMemcpy(d_arr, arr, N * sizeof(int), cudaMemcpyHostToDevice);

    sortArray<<<1, 1>>>(d_arr, N);

    cudaMemcpy(arr, d_arr, N * sizeof(int), cudaMemcpyDeviceToHost);

    printf("Sorted Array:\n");
    for (int i = 0; i < N; i++) {
        printf("%d ", arr[i]);
    }

    cudaFree(d_arr);
    return 0;
}
