#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<math.h>
#define MAX_THREADS 10

typedef struct{
    int start;
    int end;
}Range;

int isprime(int num){
    if(num<2) return 0;
    for(int i=2;i<=sqrt(num);i++){
        if (num%i==0){
            return 0;
        }
    }
    return 1;
}

void* findprime(void* arg){
    Range* range=(Range*)arg;
    for(int i=range->start;i<=range->end;i++){
        if (isprime(i)){
            printf("%d is prime\n",i);
        }
    }
    return NULL;
}

int main(){
    pthread_t threads[MAX_THREADS];
    Range ranges[MAX_THREADS];
    int start,end,num_threads;
    printf("enter starting number: ");
    scanf("%d",&start);
    printf("enter ending number: ");
    scanf("%d",&end);
    num_threads=(end-start+1)<MAX_THREADS?(end-start+1):MAX_THREADS;
    int range_size=(end-start+1)/num_threads;
    for(int i=0;i<num_threads;i++){
        ranges[i].start=start+i*range_size;
        ranges[i].end=(i==num_threads-1)?end:(start+(i+1)*range_size-1);
        pthread_create(&threads[i],NULL,findprime,(void*)&ranges[i]);
    }
    for(int i=0;i<num_threads;i++){
        pthread_join(threads[i],NULL);
    }
    printf("prime number generation completed");
    return 0;
}

